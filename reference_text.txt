use bamazon;

create table products (
	id int auto_increment not null,
    product_name varchar(40) not null,
    department_name varchar(40) not null,
    price decimal(20) not null,
    stock_quantity int(20) not null,
    primary key (id)
    );
    

    INSERT INTO table1 (hedidntnamethisfield)
VALUES ("Jeremy");


INSERT INTO products (product_name, department_name, price, stock_quantity)
VALUES ("GPS","Electronics", 460.00, 14);
INSERT INTO products (product_name, department_name, price, stock_quantity)
VALUES ("Fitness watch","Electronics", 245.00, 26);
INSERT INTO products (product_name, department_name, price, stock_quantity)
VALUES ("Headlamp","Electronics", 50.25, 26);
INSERT INTO products (product_name, department_name, price, stock_quantity)
VALUES ("Video camera","Electronics", 350.00,20);


INSERT INTO books (title, authorId) values ('Alice''s Adventures in Wonderland', 3);
INSERT INTO books (title, authorId) values ('Dracula', null);

SELECT * FROM authors;
SELECT * FROM books;

-- show ALL books with authors
-- INNER JOIN will only return all matching values from both tables
SELECT title, firstName, lastName
FROM books
INNER JOIN authors ON books.authorId = authors.id;

-- show ALL books, even if we don't know the author
-- LEFT JOIN returns all of the values from the left table, and the matching ones from the right table
SELECT title, firstName, lastName
FROM books
LEFT JOIN authors ON books.authorId = authors.id;

-- show ALL books, even if we don't know the author
-- RIGHT JOIN returns all of the values from the right table, and the matching ones from the left table
SELECT title, firstName, lastName
FROM books
RIGHT JOIN authors ON books.authorId = authors.id;